@using CarShop.CarStorageService.Grpc
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model CarShop.Web.Models.Catalog.CatalogViewModel

<div class="text-center">
    <!-- /* кнопка яка відкриває шторку зліва*/ -->
    <button class="btn btn-success" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample" onclick="check()">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
        </svg>
    </button>
    <div class="btn-group">
        @* Критерий сортировки *@
        <div class="dropdown me-2">
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                @Model.GetCarsOptions.SortBy.ToDisplayString()
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item" href="#" onclick="setSortBy(0, event)">Марка</a>
                </li>
                <li>
                    <a class="dropdown-item" href="#" onclick="setSortBy(1, event)">Объём двигателя</a>
                </li>
                <li>
                    <a class="dropdown-item" href="#" onclick="setSortBy(2, event)">Вид топлива</a>
                </li>
                <li>
                    <a class="dropdown-item" href="#" onclick="setSortBy(3, event)">Вид корпуса</a>
                </li>
                <li>
                    <a class="dropdown-item" href="#" onclick="setSortBy(4, event)">Цена</a>
                </li>
            </ul>
        </div>
        @* Тип сортировки *@
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                @Model.GetCarsOptions?.SortType.ToDisplayString()
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item" href="#" onclick="setSortType(0, event)">По возрастанию</a>
                </li>
                <li>
                    <a class="dropdown-item" href="#" onclick="setSortType(1, event)">По убыванию</a>
                </li>
            </ul>
        </div>
    </div>
</div>


<div class="container text-center">
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 my-2 g-4">
        @foreach (Car car in Model.Cars)
        {
            <div class="col">
                <div class="card mb-3">
                    <img src="@car.ImageUrl" style="height: 300px;" class="img-fluid rounded" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">@car.Brand @car.Model</h5>
                        <p class="card-text">Цена: <b class="text-success">@car.PriceForStandartConfiguration</b> грн.</p>
                        <a asp-controller="Catalog" asp-action="Index" asp-route-id="@car.Id" class="btn btn-primary">Подробнее</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (Model.Cars.Count() == 0)
{
    @if (Model.IsSearchResultsPage)
    {
        @* То, что отображается, если поиск не дал результатов *@
        <div class="alert alert-secondary m-5">Результаты не найдены.</div>
    }
    else
    {
        @* То, что отображается, если товаров нет *@
        <div class="alert alert-secondary m-5">Товаров пока нет.</div>
    }
}

@if (Model.PagesCount > 1)
{
    @await Html.PartialAsync("_PageButtonsToolbar", Model)
}
<!-- /* Форма що знаходиться в шторкі */ -->
<form method="get" onsubmit="onSearchFormSubmit(event)" oninput="check()">
    <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
        <div class="offcanvas-header">

            <h1 class="offcanvas-title " id="offcanvasExampleLabel">Пошук</h1>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">

            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">Марка</label>
                <input type="text" class="form-control" name="brand" id="e1xampleFormControlInput1" placeholder="Введіть марку авто"
                       value="@(Model.GetCarsOptions.HasBrand ? Model.GetCarsOptions.Brand : null)">
            </div>
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">Объём двигателя</label>
                <input type="number" step="0.01" min="0.01" class="form-control mb-2" name="minimum_engine_capacity" id="e1xampleFormControlInput2" placeholder="Минимальный объём двигателя"
                       value="@(Model.GetCarsOptions.HasMinimumEngineCapacity ? Model.GetCarsOptions.MinimumEngineCapacity : null)">

                <input type="number" step="0.01" min="0.01" class="form-control" name="maximum_engine_capacity" id="e1xampleFormControlInput3" placeholder="Максимальный объём двигателя"
                       value="@(Model.GetCarsOptions.HasMaximumEngineCapacity ? Model.GetCarsOptions.MaximumEngineCapacity : null)">
            </div>

            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">Вид топлива</label>
                <input type="hidden" name="fuel_type" id="fuel_type_id"/>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="1" id="flexCheckDefault1"
                           checked="@Model.GetCarsOptions.FuelType.HasFlag(Car.Types.FuelType.Petrol)">
                    <label class="form-check-label" for="flexCheckDefault">
                        Бензин
                    </label>
                </div>

                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="2" id="flexCheckDefault2"
                           checked="@Model.GetCarsOptions.FuelType.HasFlag(Car.Types.FuelType.Diesel)">
                    <label class="form-check-label" for="flexCheckDefault">
                        Дизель
                    </label>
                </div>

                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="8" id="flexCheckDefault3"
                           checked="@Model.GetCarsOptions.FuelType.HasFlag(Car.Types.FuelType.Electric)">
                    <label class="form-check-label" for="flexCheckDefault">
                        Электрика
                    </label>
                </div>

                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="4" id="flexCheckDefault4"
                           checked="@Model.GetCarsOptions.FuelType.HasFlag(Car.Types.FuelType.Gas)">
                    <label class="form-check-label" for="flexCheckDefault">
                        Газ
                    </label>
                </div>
            </div>
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">Вид корпуса</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" onclick="radiocheck(this)" name="corpus_type" id="flexRadioDefault1" value="0"
                           checked="@(Model.GetCarsOptions.HasCorpusType ? Model.GetCarsOptions.CorpusType == Car.Types.CorpusType.Sedan : null)">
                    <label class="form-check-label" for="flexRadioDefault1">
                        Седан
                    </label>
                </div>

                <div class="form-check">
                    <input class="form-check-input" type="radio" onclick="radiocheck(this)" name="corpus_type" id="flexRadioDefault2" value="1"
                           checked="@(Model.GetCarsOptions.CorpusType == Car.Types.CorpusType.Hatchback)">
                    <label class="form-check-label" for="flexRadioDefault1">
                        Хэтчбек
                    </label>
                </div>
            </div>
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">Цена</label>
                <input type="number" step="0.1" min="0" class="form-control mb-2" name="minimum_price" id="e1xampleFormControlInput4" placeholder="Минимальная цена"
                       value="@(Model.GetCarsOptions.HasMinimumPrice ? Model.GetCarsOptions.MinimumPrice : null)">

                <input type="number" step="0.1" min="0" class="form-control" name="maximum_price" id="e1xampleFormControlInput5" placeholder="Максимальная цена"
                       value="@(Model.GetCarsOptions.HasMaximumPrice ? Model.GetCarsOptions.MaximumPrice : null)">
            </div>

            <input id="powyk" class="btn btn-success w-100 disabled" type="submit" value="Пошук"/>
        </div>

    </div>
</form>

@section Scripts
{
    <script>
		function setSortBy(sortByIndex, event) {
			event.preventDefault();
			const currentUrl = new URL(window.location.href);
			currentUrl.searchParams.set('sort_by', sortByIndex.toString());
			window.location.href = currentUrl.toString();
		}

		function setSortType(sortTypeIndex, event) {
			event.preventDefault();
			const currentUrl = new URL(window.location.href);
			currentUrl.searchParams.set('sort_type', sortTypeIndex.toString());
			window.location.href = currentUrl.toString();
		}

		/* для вибору вида топлива*/
		function onSearchFormSubmit() {
			const a = window.document.getElementById("flexCheckDefault1");

			const s = window.document.getElementById("flexCheckDefault2");

			const d = window.document.getElementById("flexCheckDefault3");

			const f = window.document.getElementById("flexCheckDefault4");
			let fuel_type = 0;
			if (a.checked) {
				fuel_type |= a.value;
			}
			if (s.checked) {
				fuel_type |= s.value;
			}
			if (d.checked) {
				fuel_type |= d.value;
			}
			if (f.checked) {
				fuel_type |= f.value;
			}
			if (fuel_type > 0) {
				window.document.getElementById("fuel_type_id").value = fuel_type;
			}
		}

		/* Провірка на заповнення */
		function check() {
			const marka = window.document.getElementById("e1xampleFormControlInput1").value;
			const obuammin = window.document.getElementById("e1xampleFormControlInput2").value;
			const obuammax = window.document.getElementById("e1xampleFormControlInput3").value;
			const benz = window.document.getElementById("flexCheckDefault1").checked;
			const diez = window.document.getElementById("flexCheckDefault2").checked;
			const elect = window.document.getElementById("flexCheckDefault3").checked;
			const gas = window.document.getElementById("flexCheckDefault4").checked;
			const sedan = window.document.getElementById("flexRadioDefault1").checked;
			const hatchback = window.document.getElementById("flexRadioDefault2").checked;
			const pricemin = window.document.getElementById("e1xampleFormControlInput4").value;
			const pricemax = window.document.getElementById("e1xampleFormControlInput5").value;

			if (marka == "" && obuammax == "" && obuammin == "" && !benz && !diez && !elect && !gas && !sedan && !hatchback && pricemin == "" && pricemax == "") {
				window.document.getElementById("powyk").classList.add('disabled');

			}
			else {

				window.document.getElementById("powyk").classList.remove('disabled');
			}
		}

		/* виключає радіо кнопку*/
		var check1, check2;
		function radiocheck(с) {
			if (check1 != с) {
				check2 = 0;
				check1 = с
			}
			check2 ^= 1;
			с.checked = check2
			check();
		}
	</script>
}