syntax = "proto3";

option csharp_namespace = "CarShop.AdminService.Grpc";

package car_shop.admin_service.admin_service;

service AdminService {
  rpc CreateAccount(CreateAccountRequest)
      returns (CreateAccountReply);
  rpc GetAccount(GetAccountRequest)
      returns (GetAccountReply);
  rpc GetAccounts(GetAccountsRequest)
      returns (GetAccountsReply);
  rpc UpdateAccount(UpdateAccountRequest)
      returns (UpdateAccountReply);
  rpc Login(LoginRequest)
      returns (LoginReply);
  rpc Logout(LogoutRequest)
      returns (LogoutReply);
  rpc UpdateTokens(UpdateTokensRequest)
      returns (UpdateTokensReply);
  rpc BanAccount(BanAccountRequest)
      returns (BanAccountReply);
  rpc UnbanAccount(UnbanAccountRequest)
      returns (UnbanAccountReply);
}

message LogoutRequest {
  string refresh_token = 1;
}

message LogoutReply {
  LogoutResult result = 1;
  
  enum LogoutResult {
    UNDEFINED = 0;
    SESSION_NOT_FOUND = 1;
    SUCCESS = 2;
  }
}

// + GetAccounts
message GetAccountsRequest {
  optional SortType sort_type = 1;
  optional SortBy sort_by = 2;
  optional int32 min_priority = 3;
  optional int32 max_priority = 4;
  repeated string have_roles = 5;
  optional bool banned = 6;

  enum SortType {
    UNDEFINED = 0;
    ASC = 1;
    DESC = 2;
  }
  enum SortBy {
    _UNDEFINED = 0;
    PRIORITY = 1;
    BANNED = 2;
  }
}
// - GetAccounts

message GetAccountsReply {
  repeated AdminAccount accounts = 1;
}

// + GetAccount
message GetAccountRequest {
  int64 account_id = 1;
}

message GetAccountReply {
  GetAccountResult result = 1;
  optional AdminAccount account = 2;

  enum GetAccountResult {
    UNDEFINED = 0;
    ACCOUNT_NOT_FOUND = 1;
    SUCCESS = 2;
  }
}
// - GetAccount

// + UpdateAccount
message UpdateAccountRequest {
  int64 id = 1;
  optional string email = 2;
  optional string password = 3;
  repeated string roles = 4;
  optional bool update_roles = 5;
  optional int32 priority = 6;
  optional bool banned = 7;
}

message UpdateAccountReply {
  UpdateAccountResult result = 1;
  AdminAccount account = 2;

  enum UpdateAccountResult {
    UNDEFINED = 0;
    BAD_REQUEST = 1;
    ACCOUNT_NOT_FOUND = 2;
    EMAIL_IS_BUSY = 3;
    SUCCESS = 4;
  }
}
// - UpdateAccount

// + UnbanAccount
message UnbanAccountRequest {
  int64 account_id = 1;
}

message UnbanAccountReply {
  UnbanAccountResult result = 1;

  enum UnbanAccountResult {
    UNDEFINED = 0;
    ACCOUNT_NOT_FOUND = 1;
    ACCOUNT_NOT_BANNED = 2;
    SUCCESS = 3;
  }
}
// - UnbanAccount

// + BanAccount
message BanAccountRequest {
  int64 account_id = 1;
}

message BanAccountReply {
  BanAccountResult result = 1;

  enum BanAccountResult {
    UNDEFINED = 0;
    ACCOUNT_NOT_FOUND = 1;
    ACCOUNT_ALREADY_BANNED = 2;
    SUCCESS = 3;
  }
}
// - BanAccount

// + UpdateTokens
message UpdateTokensRequest {
  string refresh_token = 1;
}

message UpdateTokensReply {
  UpdateTokensResult result = 1;
  optional string access_token = 2;
  optional string refresh_token = 3;

  enum UpdateTokensResult {
    UNDEFINED = 0;
    BAD_REQUEST = 1;
    SESSION_NOT_FOUND = 2;
    SUCCESS = 3;
  }
}
// - UpdateTokens

// + Login
message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginReply {
  LoginResult result = 1;
  optional string access_token = 2;
  optional string refresh_token = 3;

  enum LoginResult {
    UNDEFINED = 0;
    BAD_REQUEST = 1;
    ACCOUNT_NOT_FOUND = 2;
    ACCOUNT_BANNED = 3;
    INCORRECT_PASSWORD = 4;
    SUCCESS = 5;
  }
}
// - Login

// + CreateAccount
message CreateAccountRequest {
  AdminAccount account = 1;
}

message CreateAccountReply {
  CreateAccountResult result = 1;
  optional AdminAccount account = 2;

  enum CreateAccountResult {
    UNDEFINED = 0;
    BAD_REQUEST = 1;
    USER_WITH_THIS_EMAIL_ALREADY_EXISTS = 2;
    SUCCESS = 3;
  }
}
// - CreateAccount

message AdminAccount {
  int64 id = 1;
  string email = 2;
  string password = 3;
  repeated string roles = 4;
  int32 priority = 5;
  bool banned = 6;
}
